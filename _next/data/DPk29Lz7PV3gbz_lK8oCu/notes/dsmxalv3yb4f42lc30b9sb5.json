{"pageProps":{"note":{"id":"dsmxalv3yb4f42lc30b9sb5","title":"Arch","desc":"","updated":1693615865877,"created":1676651248084,"custom":{},"fname":"pub.tools.arch","type":"note","vault":{"fsPath":".","selfContained":true,"name":"notes"},"contentHash":"b1be26af6c20167d6af0006cf07a0b93","links":[],"anchors":{"install":{"type":"header","text":"Install","value":"install","line":8,"column":0,"depth":1},"software":{"type":"header","text":"SoftWare","value":"software","line":13,"column":0,"depth":1},"pacman":{"type":"header","text":"pacman","value":"pacman","line":15,"column":0,"depth":2},"yay":{"type":"header","text":"yay","value":"yay","line":53,"column":0,"depth":2},"kde":{"type":"header","text":"kde","value":"kde","line":57,"column":0,"depth":2},"fcitx5":{"type":"header","text":"fcitx5","value":"fcitx5","line":71,"column":0,"depth":2},"ssh":{"type":"header","text":"ssh","value":"ssh","line":86,"column":0,"depth":2},"nvidia":{"type":"header","text":"nvidia","value":"nvidia","line":100,"column":0,"depth":2},"python":{"type":"header","text":"python","value":"python","line":104,"column":0,"depth":2},"anaconda":{"type":"header","text":"anaconda","value":"anaconda","line":105,"column":0,"depth":3},"conda换清华源":{"type":"header","text":"conda换清华源","value":"conda换清华源","line":110,"column":0,"depth":4},"pip换清华源":{"type":"header","text":"pip换清华源","value":"pip换清华源","line":137,"column":0,"depth":4},"cpp":{"type":"header","text":"cpp","value":"cpp","line":158,"column":0,"depth":2},"clang":{"type":"header","text":"clang","value":"clang","line":159,"column":0,"depth":3},"cmake":{"type":"header","text":"cmake","value":"cmake","line":161,"column":0,"depth":3},"g":{"type":"header","text":"g++","value":"g","line":163,"column":0,"depth":3},"cmake-1":{"type":"header","text":"cmake","value":"cmake-1","line":165,"column":0,"depth":3},"htop":{"type":"header","text":"htop","value":"htop","line":168,"column":0,"depth":2},"fish":{"type":"header","text":"fish","value":"fish","line":172,"column":0,"depth":2},"环境变量设置":{"type":"header","text":"环境变量设置","value":"环境变量设置","line":178,"column":0,"depth":3},"命令提示符添加git支持":{"type":"header","text":"命令提示符添加git支持","value":"命令提示符添加git支持","line":191,"column":0,"depth":3},"v2raya":{"type":"header","text":"v2raya","value":"v2raya","line":230,"column":0,"depth":2},"tencent":{"type":"header","text":"Tencent","value":"tencent","line":236,"column":0,"depth":2},"microsoft":{"type":"header","text":"Microsoft","value":"microsoft","line":266,"column":0,"depth":2},"wps":{"type":"header","text":"wps","value":"wps","line":326,"column":0,"depth":2},"zotero":{"type":"header","text":"zotero","value":"zotero","line":328,"column":0,"depth":2},"meshlab":{"type":"header","text":"meshlab","value":"meshlab","line":341,"column":0,"depth":2},"zeno":{"type":"header","text":"zeno","value":"zeno","line":343,"column":0,"depth":2},"code":{"type":"header","text":"Code","value":"code","line":345,"column":0,"depth":1},"word-abbreviation":{"type":"header","text":"word abbreviation","value":"word-abbreviation","line":347,"column":0,"depth":2}},"children":[],"parent":"9rgzbgkb65netbhrh58dxnz","data":{}},"body":"<h1 id=\"arch\">Arch<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#arch\"></a></h1>\n<h1 id=\"install\">Install<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#install\"></a></h1>\n<h1 id=\"software\">SoftWare<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#software\"></a></h1>\n<h2 id=\"pacman\">pacman<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#pacman\"></a></h2>\n<p><strong><a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/archlinuxcn/\">清华源</a></strong></p>\n<p>在/etc/pacman.conf文件末尾添加以下两行：</p>\n<pre><code>[archlinuxcn]\nServer = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch\n</code></pre>\n<p>之后安装 archlinuxcn-keyring 包导入 GPG key。</p>\n<p>修改/etc/pacman.conf，增加32位软件源</p>\n<pre><code>[multilib]\nInclude = /etc/pacman.d/mirrorlist\n</code></pre>\n<p>执行 <code>sudo pacman -Syy </code></p>\n<p>软件管理</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 更新系统</span>\n<span class=\"token function\">sudo</span> pacman -Syy <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token function\">sudo</span> pacman -Su\n<span class=\"token comment\"># 安装软件</span>\n<span class=\"token function\">sudo</span> pacman -S <span class=\"token operator\">&#x3C;</span>pkg name<span class=\"token operator\">></span>\n<span class=\"token comment\"># 卸载软件</span>\n<span class=\"token function\">sudo</span> pacman -R <span class=\"token operator\">&#x3C;</span>pkg-name<span class=\"token operator\">></span>\n<span class=\"token comment\"># 查询文件属于哪个包管理器</span>\n<span class=\"token function\">sudo</span> pacman -Qo /path/to/file_name\n<span class=\"token comment\"># </span>\n</code></pre>\n<p>阻止软件升级</p>\n<pre><code># /etc/pacman.conf,修改以下行\n[options]\nIgnorePkg = &#x3C;pkg name>\n</code></pre>\n<h2 id=\"yay\">yay<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#yay\"></a></h2>\n<h2 id=\"kde\">kde<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#kde\"></a></h2>\n<p><a href=\"https://wiki.archlinux.org/title/KDE\">Arch kde install</a></p>\n<p>kde-plasma,plasma-desktop</p>\n<p>系统监视器 system info</p>\n<p>截图 spectacle</p>\n<p>文件夹 Dolphin</p>\n<p>网络管理工具 plasma-nm</p>\n<h2 id=\"fcitx5\">fcitx5<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#fcitx5\"></a></h2>\n<p>安装<a href=\"https://wiki.archlinux.org/title/Fcitx5\">fcitx5</a></p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> pacman -S fcitx5 fcitx5-im fcitx5-qt fcitx5-gtk fcitx5-chinese-addons\n</code></pre>\n<p>编辑环境变量/etc/environment</p>\n<pre><code>INPUT_METHOD=fcitx5\nGTK_IM_MOUDLE=fcitx5\nQT_IM_MODULE=fcitx5\nXMODIFIERS=@im=fcitx5\n</code></pre>\n<h2 id=\"ssh\">ssh<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#ssh\"></a></h2>\n<p>ssh连接3090失败，No route to host</p>\n<ol>\n<li>重启NetworkManager</li>\n</ol>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># sudo systemctl restart NetworkManager</span>\n\n<span class=\"token function\">ping</span> -I <span class=\"token operator\">&#x3C;</span>ip or interface name<span class=\"token operator\">></span> <span class=\"token operator\">&#x3C;</span>dest<span class=\"token operator\">></span>\n<span class=\"token comment\"># 查看路由表,添加路由，编辑/etc/profile</span>\nroute -n\n<span class=\"token function\">sudo</span> route <span class=\"token function\">add</span> -net <span class=\"token number\">10.184</span>.0.0 netmask <span class=\"token number\">255.255</span>.0.0 gw <span class=\"token number\">10.181</span>.0.1\n</code></pre>\n<h2 id=\"nvidia\">nvidia<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#nvidia\"></a></h2>\n<p><a href=\"https://developer.nvidia.com/cuda-downloads\">cudatookits</a></p>\n<h2 id=\"python\">python<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#python\"></a></h2>\n<h3 id=\"anaconda\">anaconda<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#anaconda\"></a></h3>\n<p>安装地址 <a href=\"https://aur.archlinux.org/packages/anaconda\">Aur</a></p>\n<h4 id=\"conda换清华源\">conda换<a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/\">清华源</a><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#conda换清华源\"></a></h4>\n<p>TUNA 还提供了 Anaconda 仓库与第三方源（conda-forge、msys2、pytorch等，查看完整列表，更多第三方源可以前往校园网联合镜像站查看）的镜像，各系统都可以通过修改用户目录下的 .condarc 文件来使用 TUNA 镜像源。Windows 用户无法直接创建名为 .condarc 的文件，可先执行 conda config --set show_channel_urls yes 生成该文件之后再修改。</p>\n<p>注：由于更新过快难以同步，我们不同步pytorch-nightly, pytorch-nightly-cpu, ignite-nightly这三个包。</p>\n<pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">channels</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> defaults\n<span class=\"token key atrule\">show_channel_urls</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">default_channels</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main\n  <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r\n  <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2\n<span class=\"token key atrule\">custom_channels</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">conda-forge</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  <span class=\"token key atrule\">msys2</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  <span class=\"token key atrule\">bioconda</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  <span class=\"token key atrule\">menpo</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  <span class=\"token key atrule\">pytorch</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  <span class=\"token key atrule\">pytorch-lts</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  <span class=\"token key atrule\">simpleitk</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n</code></pre>\n<p>运行 conda clean -i 清除索引缓存，保证用的是镜像站提供的索引。</p>\n<p>运行 conda create -n myenv numpy 测试一下吧。</p>\n<h4 id=\"pip换清华源\">pip换<a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/pypi/\">清华源</a><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#pip换清华源\"></a></h4>\n<p>临时使用</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">pip <span class=\"token function\">install</span> -i https://pypi.tuna.tsinghua.edu.cn/simple some-package\n</code></pre>\n<p>设为默认</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">python -m pip <span class=\"token function\">install</span> --upgrade pip\npip config <span class=\"token builtin class-name\">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple\n<span class=\"token comment\"># 或者如果您到 pip 默认源的网络连接较差，临时使用本镜像站来升级 pip：</span>\npython -m pip <span class=\"token function\">install</span> -i https://pypi.tuna.tsinghua.edu.cn/simple --upgrade pip\n</code></pre>\n<p>配置多个镜像源。如果您想配置多个镜像源平衡负载，可在已经替换 index-url 的情况下通过以下方式继续增加源站：</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 请自行替换引号内的内容，源地址之间需要有空格</span>\npip config <span class=\"token builtin class-name\">set</span> global.extra-index-url <span class=\"token string\">\"&#x3C;url1> &#x3C;url2>...\"</span>\n</code></pre>\n<p>可用的 pypi 源列表（校园网联合镜像站): (<a href=\"https://mirrors.cernet.edu.cn/list/pypi\">https://mirrors.cernet.edu.cn/list/pypi</a>)</p>\n<h2 id=\"cpp\">cpp<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#cpp\"></a></h2>\n<h3 id=\"clang\">clang<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#clang\"></a></h3>\n<h3 id=\"cmake\">cmake<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#cmake\"></a></h3>\n<h3 id=\"g\">g++<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#g\"></a></h3>\n<h3 id=\"cmake-1\">cmake<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#cmake-1\"></a></h3>\n<h2 id=\"htop\">htop<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#htop\"></a></h2>\n<p>监视进程命令行工具</p>\n<h2 id=\"fish\">fish<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#fish\"></a></h2>\n<p>fish, the friendly interactive shell, is a commandline shell intended to be interactive and user-friendly.</p>\n<p><a href=\"https://fishshell.com/docs/current/index.html\">docs</a></p>\n<h3 id=\"环境变量设置\">环境变量设置<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#环境变量设置\"></a></h3>\n<p>第一种：修改~/.config/fish/config.fish</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">set</span> -x <span class=\"token environment constant\">PATH</span> /opt/cuda/bin <span class=\"token environment constant\">$PATH</span>\n</code></pre>\n<p>第二种</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">fish_add_path <span class=\"token operator\">&#x3C;</span>path<span class=\"token operator\">></span>\n</code></pre>\n<p>第三种：修改~/.config/fish/fish_variables</p>\n<h3 id=\"命令提示符添加git支持\">命令提示符添加git支持<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#命令提示符添加git支持\"></a></h3>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">function</span> fish_prompt --description <span class=\"token string\">'Write out the prompt'</span>\n    <span class=\"token builtin class-name\">set</span> -l last_pipestatus <span class=\"token variable\">$pipestatus</span>\n    <span class=\"token builtin class-name\">set</span> -g __fish_git_prompt_showupstream verbose\n    <span class=\"token builtin class-name\">set</span> -g __fish_git_prompt_showcolorhints\n    <span class=\"token builtin class-name\">set</span> -g __fish_git_prompt_show_informative_status\n    <span class=\"token builtin class-name\">set</span> -g fish_prompt_hg_show_informative_status\n    <span class=\"token builtin class-name\">set</span> -lx __fish_last_status <span class=\"token variable\">$status</span> <span class=\"token comment\"># Export for __fish_print_pipestatus.</span>\n    <span class=\"token builtin class-name\">set</span> -l normal <span class=\"token punctuation\">(</span>set_color normal<span class=\"token punctuation\">)</span>\n    <span class=\"token builtin class-name\">set</span> -q fish_color_status\n    or <span class=\"token builtin class-name\">set</span> -g fish_color_status --background<span class=\"token operator\">=</span>red white\n\n    <span class=\"token comment\"># Color the prompt differently when we're root</span>\n    <span class=\"token builtin class-name\">set</span> -l color_cwd <span class=\"token variable\">$fish_color_cwd</span>\n    <span class=\"token builtin class-name\">set</span> -l suffix <span class=\"token string\">'>'</span>\n    <span class=\"token keyword\">if</span> functions -q fish_is_root_user<span class=\"token punctuation\">;</span> and fish_is_root_user\n        <span class=\"token keyword\">if</span> <span class=\"token builtin class-name\">set</span> -q fish_color_cwd_root\n            <span class=\"token builtin class-name\">set</span> color_cwd <span class=\"token variable\">$fish_color_cwd_root</span>\n        end\n        <span class=\"token builtin class-name\">set</span> suffix <span class=\"token string\">'#'</span>\n    end\n\n    <span class=\"token comment\"># Write pipestatus</span>\n    <span class=\"token comment\"># If the status was carried over (if no command is issued or if `set` leaves the status untouched), don't bold it.</span>\n    <span class=\"token builtin class-name\">set</span> -l bold_flag --bold\n    <span class=\"token builtin class-name\">set</span> -q __fish_prompt_status_generation<span class=\"token punctuation\">;</span> or <span class=\"token builtin class-name\">set</span> -g __fish_prompt_status_generation <span class=\"token variable\">$status_generation</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin class-name\">test</span> <span class=\"token variable\">$__fish_prompt_status_generation</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$status_generation</span>\n        <span class=\"token builtin class-name\">set</span> bold_flag\n    end\n    <span class=\"token builtin class-name\">set</span> __fish_prompt_status_generation <span class=\"token variable\">$status_generation</span>\n    <span class=\"token builtin class-name\">set</span> -l status_color <span class=\"token punctuation\">(</span>set_color <span class=\"token variable\">$fish_color_status</span><span class=\"token punctuation\">)</span>\n    <span class=\"token builtin class-name\">set</span> -l statusb_color <span class=\"token punctuation\">(</span>set_color <span class=\"token variable\">$bold_flag</span> <span class=\"token variable\">$fish_color_status</span><span class=\"token punctuation\">)</span>\n    <span class=\"token builtin class-name\">set</span> -l prompt_status <span class=\"token punctuation\">(</span>__fish_print_pipestatus <span class=\"token string\">\"[\"</span> <span class=\"token string\">\"]\"</span> <span class=\"token string\">\"|\"</span> <span class=\"token string\">\"<span class=\"token variable\">$status_color</span>\"</span> <span class=\"token string\">\"<span class=\"token variable\">$statusb_color</span>\"</span> <span class=\"token variable\">$last_pipestatus</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token builtin class-name\">echo</span> -n -s <span class=\"token punctuation\">(</span>prompt_login<span class=\"token punctuation\">)</span><span class=\"token string\">' '</span> <span class=\"token punctuation\">(</span>set_color <span class=\"token variable\">$color_cwd</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>prompt_pwd<span class=\"token punctuation\">)</span> <span class=\"token variable\">$normal</span> <span class=\"token punctuation\">(</span>fish_vcs_prompt<span class=\"token punctuation\">)</span> <span class=\"token variable\">$normal</span> <span class=\"token string\">\" \"</span><span class=\"token variable\">$prompt_status</span> <span class=\"token variable\">$suffix</span> <span class=\"token string\">\" \"</span>\nend\n</code></pre>\n<h2 id=\"v2raya\">v2raya<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#v2raya\"></a></h2>\n<p>版本选择&#x3C;=4</p>\n<p>阻止pacman更新v2ray-core</p>\n<h2 id=\"tencent\">Tencent<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#tencent\"></a></h2>\n<p>使用wine安装微信</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># locale -a should have zh_CN.utf8</span>\nlocale -a\n<span class=\"token comment\"># 修改/etc/locale.gen，去掉zh_CN.UTF-8 UTF-8前面的注释</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/locale.gen\n<span class=\"token comment\"># 生成locale</span>\n<span class=\"token function\">sudo</span> locale-gen\n\n<span class=\"token comment\"># 安装wine-for-wechat from archlinuxcn</span>\n<span class=\"token function\">sudo</span> pacman -S wine-for-wechat\n<span class=\"token comment\"># 下载wechatsetup.exe</span>\nwine64 WechatSetup.exe\n<span class=\"token comment\"># 安装winetricks</span>\n<span class=\"token function\">sudo</span> pacman -S winetricks\n<span class=\"token comment\"># 安装微信所需的依赖，处理没有输入框的情况</span>\nwinetricks riched20\n\n<span class=\"token comment\"># 将msyh字体复制到/usr/share/fonts/msyh文件夹下，修复乱码</span>\nmkfontscale\nmkfontdir\nfc-cache -fv\n\n<span class=\"token comment\"># 微信窗口关闭在打开就不能输入中文了</span>\n\n</code></pre>\n<h2 id=\"microsoft\">Microsoft<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#microsoft\"></a></h2>\n<p><a href=\"https://github.com/jstaf/onedriver\">onedriver github</a></p>\n<p>openai block bwg server</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 安装cloudflare warp， https://pkg.cloudflareclient.com/install</span>\n<span class=\"token function\">curl</span> https://pkg.cloudflareclient.com/pubkey.gpg <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> gpg --yes --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"deb [arch=amd64 signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ <span class=\"token variable\"><span class=\"token variable\">$(</span>lsb_release -cs<span class=\"token variable\">)</span></span> main\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/apt/sources.list.d/cloudflare-client.list\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> cloudflare-warp\n\n<span class=\"token comment\"># set warp</span>\n<span class=\"token function\">sudo</span> warp-cli register\n<span class=\"token function\">sudo</span> warp-cli set-mode proxy\n<span class=\"token function\">sudo</span> warp-cli connect\n<span class=\"token function\">curl</span> ifconfig.me --proxy socks5://127.0.0.1:40000\n<span class=\"token function\">curl</span> caht.openai.com --proxy socks5://127.0.0.1:40000\n\n</code></pre>\n<p>修改服务器trojan入站出战规则（/etc/v2ray/config.json）</p>\n<pre class=\"language-json\"><code class=\"language-json\"> <span class=\"token property\">\"outbounds\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"protocol\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"freedom\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"settings\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"protocol\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"blackhole\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"settings\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"tag\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"blocked\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"tag\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"chatGPT_proxy\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"protocol\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"socks\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"settings\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"servers\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"address\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"port\"</span><span class=\"token operator\">:</span> <span class=\"token number\">40000</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"routing\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"rules\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"field\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"outboundTag\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"chatGPT_proxy\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"domain\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token string\">\"chat.openai.com\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"ip138.com\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"domain:openai.com\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"domain:ai.com\"</span>\n        <span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"wps\">wps<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#wps\"></a></h2>\n<h2 id=\"zotero\">zotero<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#zotero\"></a></h2>\n<p><strong>plugin</strong></p>\n<ul>\n<li>ZotFile <a href=\"https://github.com/jlegewie/zotfile.git\">https://github.com/jlegewie/zotfile.git</a></li>\n<li>Zotero Tag <a href=\"https://github.com/windingwind/zotero-tag.git\">https://github.com/windingwind/zotero-tag.git</a></li>\n<li>Zutilo Utility for Zotero <a href=\"https://github.com/wshanks/Zutilo.git\">https://github.com/wshanks/Zutilo.git</a></li>\n<li>Zotero Scholar Citations <a href=\"https://github.com/nico-zck/zotero-scholar-citations.git\">https://github.com/nico-zck/zotero-scholar-citations.git</a></li>\n<li>Better Notes for Zotero <a href=\"https://github.com/windingwind/zotero-better-notes.git\">https://github.com/windingwind/zotero-better-notes.git</a></li>\n<li>Zotero GPT <a href=\"https://github.com/MuiseDestiny/zotero-gpt.git\">https://github.com/MuiseDestiny/zotero-gpt.git</a></li>\n<li>Zotero Style <a href=\"https://github.com/MuiseDestiny/zotero-style.git\">https://github.com/MuiseDestiny/zotero-style.git</a></li>\n<li>Zotero Refrence <a href=\"https://github.com/MuiseDestiny/zotero-reference.git\">https://github.com/MuiseDestiny/zotero-reference.git</a></li>\n</ul>\n<h2 id=\"meshlab\">meshlab<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#meshlab\"></a></h2>\n<h2 id=\"zeno\">zeno<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#zeno\"></a></h2>\n<h1 id=\"code\">Code<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#code\"></a></h1>\n<h2 id=\"word-abbreviation\">word abbreviation<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#word-abbreviation\"></a></h2>\n<p>rules </p>\n<ol>\n<li>The first few or some letters of a word, such as addr (address) and asm (assembly);</li>\n<li>Word syllable initials splicing, such as msg (message);</li>\n<li>Multiple word initials splicing, such as NASA (National Aeronautics and Space Administration);</li>\n<li>Remove the vowels aeiou and keep the consonants, such ad JPN (Japan), CHN (China) and ft (foot);</li>\n<li>A common abbreviation, such as thx(thanks).</li>\n</ol>","noteIndex":{"fname":"pub","stub":true,"vault":{"fsPath":".","selfContained":true,"name":"notes"},"schemaStub":false,"type":"note","updated":1698572854809,"created":1698572854809,"id":"3w8ufj0ddqin6wp485hfdsg","desc":"","links":[],"anchors":{},"children":["9rgzbgkb65netbhrh58dxnz","hhz8q9pblj7dmva0w1jijb8"],"parent":null,"body":"","data":{},"title":"Pub","custom":{"nav_order":0,"permalink":"/"}},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"notes"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"theme":"custom","enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["pub"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","theme":"dark","usePrettyRefs":true,"assetsPrefix":"/pub-notes","siteUrl":"https://jinjiwu.github.io","siteFaviconPath":"favicon.ico","siteIndex":"pub"}}},"__N_SSG":true}